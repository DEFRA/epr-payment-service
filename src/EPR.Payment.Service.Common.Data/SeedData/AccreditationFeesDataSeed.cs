using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using EPR.Payment.Service.Common.Data.DataModels.Lookups;
using EPR.Payment.Service.Common.Data.Enums;

namespace EPR.Payment.Service.Common.Data.SeedData
{
    [ExcludeFromCodeCoverage]
    public static class AccreditationFeesDataSeed
    {
        private static readonly DateTime effectiveFromDateForYear2024 = DateTime.ParseExact("01/09/2024 00:00:00", "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal);
        private static readonly DateTime effectiveToDateForYear9999 = DateTime.ParseExact("31/08/9999 23:59:59", "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal);

        public static void SeedAccreditationFees(EntityTypeBuilder<AccreditationFee> builder)
        {
            SeedExporterAccreditationFeesData(builder);
            SeedReprocessorAccreditationFeesData(builder);
        }

        private static void SeedExporterAccreditationFeesData(EntityTypeBuilder<AccreditationFee> builder)
        {
            builder.HasData(
                            new AccreditationFee { Id = 1, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 2, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 3, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 4, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 5, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 6, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 7, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 8, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 9, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 10, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 11, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 12, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 13, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 14, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 15, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 16, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 17, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 18, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 19, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 20, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 21, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 22, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 23, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 24, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 25, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 26, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 27, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 28, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 29, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 30, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 31, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 32, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 33, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 34, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 35, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 36, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 37, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 38, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 39, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 40, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 41, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 42, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 43, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 44, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 45, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 46, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 47, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 48, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 49, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 50, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 51, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 52, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 53, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 54, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 55, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 56, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 57, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 58, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 59, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 60, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 61, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 62, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 63, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 64, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 65, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 66, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 67, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 68, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 69, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 70, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 71, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 72, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 73, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 74, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 75, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 76, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 77, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 78, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 79, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 80, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 81, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 82, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 83, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 84, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 85, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 86, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 87, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 88, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 89, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 90, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 91, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 92, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 93, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 94, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 95, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 96, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 }
                            );
        }

        private static void SeedReprocessorAccreditationFeesData(EntityTypeBuilder<AccreditationFee> builder)
        {
            builder.HasData(
                            // England
                            new AccreditationFee { Id = 97, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 98, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 99, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 100, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 101, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 102, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 103, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 104, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 105, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 106, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 107, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 108, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 109, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 110, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 111, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 112, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 113, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 114, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 115, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 116, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 117, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 118, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 119, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 120, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            // Northern Ireland
                            new AccreditationFee { Id = 121, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 122, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 123, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 124, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 125, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 126, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 127, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 128, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 129, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 130, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 131, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 132, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 133, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 134, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 135, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 136, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 137, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 138, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 139, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 140, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 141, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 142, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 143, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 144, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            // Scotland
                            new AccreditationFee { Id = 145, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Scotland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 146, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 147, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 148, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 149, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Scotland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 150, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 151, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 152, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 153, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Scotland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 154, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 155, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 156, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 157, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Scotland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 158, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 159, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 160, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 161, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Scotland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 162, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 163, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 164, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 165, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Scotland, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 166, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 167, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 168, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            // Wales
                            new AccreditationFee { Id = 169, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Wales, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 170, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 171, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 172, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 173, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Wales, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 174, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 175, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 176, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 177, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Wales, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 178, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 179, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 180, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 181, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Wales, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 182, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 183, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 184, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 185, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Wales, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 186, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 187, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 188, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },

                            new AccreditationFee { Id = 189, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver =     0, TonnesUpTo =     500, RegulatorId = (int)Enums.Regulator.Wales, Amount =  500, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 190, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver =   500, TonnesUpTo =    5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 191, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver =  5000, TonnesUpTo =   10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 192, GroupId = (int)Enums.Group.Reprocessors, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 0, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 }
                            );
        }

    }
}