using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using EPR.Payment.Service.Common.Data.DataModels.Lookups;
using EPR.Payment.Service.Common.Data.Enums;

namespace EPR.Payment.Service.Common.Data.SeedData
{
    [ExcludeFromCodeCoverage]
    public static class AccreditationFeesDataSeed
    {        
        private static readonly DateTime effectiveFromDateForYear2024 = DateTime.ParseExact("01/09/2024 00:00:00", "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal);
        private static readonly DateTime effectiveToDateForYear9999 = DateTime.ParseExact("31/08/9999 23:59:59", "dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal);

        public static void SeedAccreditationFees(EntityTypeBuilder<AccreditationFee> builder)
        {
            SeedExporterAccreditationFeesData(builder);
            SeedReprocessorAccreditationFeesData(builder);
        }

        private static void SeedExporterAccreditationFeesData(EntityTypeBuilder<AccreditationFee> builder)
        {
            builder.HasData(
                            new AccreditationFee { Id = 1, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 2, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 3, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 4, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 5, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 6, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 7, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 8, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 9, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 10, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 11, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 12, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 13, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 14, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 15, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 16, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 17, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 18, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 19, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 20, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 21, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.England, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 22, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.England, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 23, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.England, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 24, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.England, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 25, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 26, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 27, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 28, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 29, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 30, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 31, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 32, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 33, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 34, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 35, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 36, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 37, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 38, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 39, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 40, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 41, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 42, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 43, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 44, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 45, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 46, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 47, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 48, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.NorthernIreland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 49, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 50, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 51, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 52, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 53, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 54, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 55, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 56, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 57, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 58, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 59, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 60, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 61, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 62, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 63, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 64, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 65, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 66, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 67, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 68, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 69, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 70, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 71, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 72, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Scotland, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 73, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 74, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 75, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 76, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Aluminium, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 77, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 78, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 79, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 80, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Glass, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 81, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 82, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 83, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 84, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.PaperOrBoardOrFibreBasedCompositeMaterial, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 85, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 86, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 87, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 88, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Plastic, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 89, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 90, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 91, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 92, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Steel, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 93, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 0, TonnesUpTo = 500, RegulatorId = (int)Enums.Regulator.Wales, Amount = 500, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 94, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 500, TonnesUpTo = 5000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 2000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 95, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 5000, TonnesUpTo = 10000, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3000, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 },
                            new AccreditationFee { Id = 96, GroupId = (int)Enums.Group.Exporters, SubGroupId = (int)Enums.SubGroup.Wood, TonnesOver = 10000, TonnesUpTo = 99999999, RegulatorId = (int)Enums.Regulator.Wales, Amount = 3631, FeesPerSite = 216, EffectiveFrom = effectiveFromDateForYear2024, EffectiveTo = effectiveToDateForYear9999 }         
                            );
        }

        private static void SeedReprocessorAccreditationFeesData(EntityTypeBuilder<AccreditationFee> builder)
        {
            
        }
    }
}
