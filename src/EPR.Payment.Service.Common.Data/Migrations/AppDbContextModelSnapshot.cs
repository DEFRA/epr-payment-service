// <auto-generated />
using System;
using EPR.Payment.Service.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EPR.Payment.Service.Common.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Lookups.AdditionalRegistrationFees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeesSubType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("AdditionalRegistrationFees", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 714m,
                            Description = "Resubmission",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesSubType = "Resub",
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 714m,
                            Description = "Resubmission",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesSubType = "Resub",
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 714m,
                            Description = "Resubmission",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesSubType = "Resub",
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 714m,
                            Description = "Resubmission",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesSubType = "Resub",
                            Regulator = "GB-NIR"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 332m,
                            Description = "Late",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesSubType = "Late",
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 332m,
                            Description = "Late",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesSubType = "Late",
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 332m,
                            Description = "Late",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesSubType = "Late",
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 332m,
                            Description = "Late",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesSubType = "Late",
                            Regulator = "GB-NIR"
                        });
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Lookups.ComplianceSchemeRegistrationFees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeesType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ComplianceSchemeRegistrationFees", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 13804m,
                            Description = "Registration",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "Reg",
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 13804m,
                            Description = "Registration",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "Reg",
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 13804m,
                            Description = "Registration",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "Reg",
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 13804m,
                            Description = "Registration",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "Reg",
                            Regulator = "GB-NIR"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 1658m,
                            Description = "Large Producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "L",
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 1658m,
                            Description = "Large Producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "L",
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 1658m,
                            Description = "Large Producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "L",
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 1658m,
                            Description = "Large Producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "L",
                            Regulator = "GB-NIR"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 631m,
                            Description = "Small Producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "S",
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 631m,
                            Description = "Small Producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "S",
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 11,
                            Amount = 631m,
                            Description = "Small Producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "S",
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 12,
                            Amount = 631m,
                            Description = "Small Producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "S",
                            Regulator = "GB-NIR"
                        },
                        new
                        {
                            Id = 13,
                            Amount = 2579m,
                            Description = "Online Market",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "On",
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 14,
                            Amount = 2579m,
                            Description = "Online Market",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "On",
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 15,
                            Amount = 2579m,
                            Description = "Online Market",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "On",
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 16,
                            Amount = 2579m,
                            Description = "Online Market",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeesType = "On",
                            Regulator = "GB-NIR"
                        });
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Lookups.PaymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatus", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Status = "Initiated"
                        },
                        new
                        {
                            Id = 1,
                            Status = "InProgress"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Success"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Failed"
                        },
                        new
                        {
                            Id = 4,
                            Status = "Error"
                        },
                        new
                        {
                            Id = 5,
                            Status = "UserCancelled"
                        });
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Lookups.ProducerRegistrationFees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProducerType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ProducerRegistrationFees", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2620m,
                            Description = "Large producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerType = "L",
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 2620m,
                            Description = "Large producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerType = "L",
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2620m,
                            Description = "Large producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerType = "L",
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 2620m,
                            Description = "Large producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerType = "L",
                            Regulator = "GB-NIR"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 1216m,
                            Description = "Small producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerType = "S",
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 1216m,
                            Description = "Small producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerType = "S",
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 1216m,
                            Description = "Small producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerType = "S",
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 1216m,
                            Description = "Small producer",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProducerType = "S",
                            Regulator = "GB-NIR"
                        });
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Lookups.SubsidiariesRegistrationFees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxNumberOfSubsidiaries")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<int>("MinNumberOfSubsidiaries")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("SubsidiariesRegistrationFees", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 558m,
                            Description = "Up to 20",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxNumberOfSubsidiaries = 20,
                            MinNumberOfSubsidiaries = 1,
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 558m,
                            Description = "Up to 20",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxNumberOfSubsidiaries = 20,
                            MinNumberOfSubsidiaries = 1,
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 558m,
                            Description = "Up to 20",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxNumberOfSubsidiaries = 20,
                            MinNumberOfSubsidiaries = 1,
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 558m,
                            Description = "Up to 20",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxNumberOfSubsidiaries = 20,
                            MinNumberOfSubsidiaries = 1,
                            Regulator = "GB-NIR"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 140m,
                            Description = "More then 20",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxNumberOfSubsidiaries = 100,
                            MinNumberOfSubsidiaries = 21,
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 140m,
                            Description = "More then 20",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxNumberOfSubsidiaries = 100,
                            MinNumberOfSubsidiaries = 21,
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 140m,
                            Description = "More then 20",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxNumberOfSubsidiaries = 100,
                            MinNumberOfSubsidiaries = 21,
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 140m,
                            Description = "More then 20",
                            EffectiveFrom = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EffectiveTo = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxNumberOfSubsidiaries = 100,
                            MinNumberOfSubsidiaries = 21,
                            Regulator = "GB-NIR"
                        });
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19,4)")
                        .HasColumnOrder(12);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(14);

                    b.Property<string>("ErrorCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(9);

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(10);

                    b.Property<Guid>("ExternalPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("GovPayStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(8);

                    b.Property<string>("GovpayPaymentId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(5);

                    b.Property<int>("InternalStatusId")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<string>("ReasonForPayment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(13);

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(11);

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(7);

                    b.Property<Guid>("UpdatedByOrganisationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(16);

                    b.Property<Guid>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(15);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(17);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("ExternalPaymentId")
                        .IsUnique();

                    b.HasIndex("GovpayPaymentId")
                        .IsUnique()
                        .HasFilter("[GovpayPaymentId] IS NOT NULL");

                    b.HasIndex("InternalStatusId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Payment", b =>
                {
                    b.HasOne("EPR.Payment.Service.Common.Data.DataModels.Lookups.PaymentStatus", "PaymentStatus")
                        .WithMany("Payments")
                        .HasForeignKey("InternalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentStatus");
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Lookups.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
