// <auto-generated />
using System;
using EPR.Payment.Service.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EPR.Payment.Service.Common.Data.Migrations
{
    [DbContext(typeof(FeePaymentDataContext))]
    [Migration("20240507161903_Initial Database")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Lookups.AccreditationFees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Large")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("AccreditationFees", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2616m,
                            EffectiveFrom = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Large = true,
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 2616m,
                            EffectiveFrom = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Large = true,
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 2616m,
                            EffectiveFrom = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Large = true,
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 2616m,
                            EffectiveFrom = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Large = true,
                            Regulator = "GB-NIR"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 505m,
                            EffectiveFrom = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Large = false,
                            Regulator = "GB-ENG"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 505m,
                            EffectiveFrom = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Large = false,
                            Regulator = "GB-SCT"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 505m,
                            EffectiveFrom = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Large = false,
                            Regulator = "GB-WLS"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 505m,
                            EffectiveFrom = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Large = false,
                            Regulator = "GB-NIR"
                        });
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Lookups.PaymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatus", "Lookup");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Status = "Initiated"
                        },
                        new
                        {
                            Id = 1,
                            Status = "Success"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Failed"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Error"
                        });
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ExternalPaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GovPayStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GovpayPaymentId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InternalStatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonForPayment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Regulator")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("UpdatedByOrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GovpayPaymentId")
                        .IsUnique();

                    b.HasIndex("InternalStatusId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Payment", b =>
                {
                    b.HasOne("EPR.Payment.Service.Common.Data.DataModels.Lookups.PaymentStatus", "Status")
                        .WithMany("Payments")
                        .HasForeignKey("InternalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("EPR.Payment.Service.Common.Data.DataModels.Lookups.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
